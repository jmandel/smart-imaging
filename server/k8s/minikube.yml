apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: smart-imaging-access
  name: launcher
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - host: launcher.imaging-local.argo.run
      http:
        paths:
          - path: "/($)?(.*)"
            pathType: Prefix
            backend:
              service:
                name: launcher
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: smart-imaging-access
  name: reference
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "600m"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^(/orthanc)$ /orthanc/ redirect;
spec:
  rules:
    - host: imaging-local.argo.run
      http:
        paths:
          - path: "/orthanc(/|$)?(.*)"
            pathType: Prefix
            backend:
              service:
                name: orthanc
                port:
                  number: 8042
          - path: "/($)?(.*)"
            pathType: Prefix
            backend:
              service:
                name: reference
                port:
                  number: 8000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-config
  namespace: smart-imaging-access
data:
  BASE_URL: https://imaging-local.argo.run
  LOCAL_STACK_CONFIG: --unsafely-ignore-certificate-errors
  LAUNCHER_ASSOCIATED_ENDPOINTS: '[{"url": "https://imaging-local.argo.run/smart-sandbox-local/fhir", "capabilities": ["smart-imaging-access"]}]'